<?php
/**
 * Created by JetBrains PhpStorm.
 * User: chipx
 * Date: 02.08.13
 * Time: 18:01
 * To change this template use File | Settings | File Templates.
 */

namespace Lib\Db;


use CEvent;
use CException;
use CList;
use Yii;

class ExtendFields extends \CActiveRecordBehavior
{
    const TABLE_SUFFIX = '_fields';
    public $fieldsTable;
    public $linkColumn;
    public $allowedFields;

    protected $fields;

    public function afterFind($event)
    {
        $command = $this->owner->dbConnection->createCommand();
        $command->select()->from($this->getFieldsTable())->where('parent = :p', [':p' => $this->owner->{$this->getLinkColumn()}]);
        if (is_array($this->allowedFields) && !empty($this->allowedFields)) {
            $command->where(['in', 'name', $this->allowedFields]);
        }
        $this->prepareFields($command->query());
    }


    protected function prepareFields(\CDbDataReader $data)
    {
        while ($row = $data->read()) {
            if (!isset($this->fields[$row['name']])) {
                $this->fields[$row['name']] = [$row['id'] => $row['value']];
            } else {
                $this->fields[$row['name']][$row['id']] =  $row['value'];
            }
        }
    }

    public function __get($name)
    {
        if (isset($this->fields[$name])) {
            if (count($this->fields[$name]) == 1) {
                return current($this->fields[$name]);
            } else {
                return $this->fields[$name];
            }
        } else {
            return parent::__get($name); // TODO: Change the autogenerated stub
        }
    }

    /**
     * @return mixed
     */
    public function getFieldsTable()
    {
        if (!$this->fieldsTable) {
            $this->fieldsTable = $this->owner->tableName() . self::TABLE_SUFFIX;
        }
        return $this->fieldsTable;
    }

    /**
     * @return mixed
     */
    public function getLinkColumn()
    {
        if (!$this->linkColumn) {
            $this->linkColumn = (string)$this->owner->getTableSchema()->primaryKey;
        }
        return $this->linkColumn;
    }



}